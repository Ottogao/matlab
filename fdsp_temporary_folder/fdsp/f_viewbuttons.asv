function [hc_view,dw,dz] = f_viewbuttons (pos,nv,pv,labels,fcolors,bcolor,cback,tipstrs,ns,fsize)

%F_VIEWBUTTONS: Create radio buttons for viewing options
%
% Usage: hc_view = f_viewbuttons (pos,nv,pv,labels,fcolors,bcolor,cback,tipstrs,ns);
%
% Inputs: 
%         pos     = position vector of axes
%         nv      = number of radio buttons
%         pv      = plot view
%         labels  = cell array of nv strings containing button labels
%         fcolors = array of nv forground colors
%         bcolor  = backgournd color
%         cback   = cell array of nv callback strings
%         tipstrs = cell array of nv tool tip strings
%         ns      = number of radio buttons used to compute spacing
%                  (default nv) 
%         fsize   = font size
% Outputs: 
%          hc_view = array of handles to view buttons
%          dw      = horizontal spacing
%          dz      = vertical spacing

if nargin < 9
    ns = nv;
end

waxis = pos(3);
haxis = pos(4);
wbox = 0.84*waxis;
dw = (waxis - wbox)/3;
hbox = 0.13*haxis;
dh = (haxis - ns*hbox)/(ns+1);
dz = hbox+dh;
pos_view = [pos(1)+dw,pos(2)+haxis-dz,wbox,hbox]; 
v0 = zeros(1,nv);
v0(pv) = 1;
fsize = 8;

for k = 1 : nv
    hc_view(k) = uicontrol(gcf,...
        'Style','radiobutton',...
        'Units','normalized',...
        'FontSize',fsize,...
        'Position',pos_view + [0 -(k-1)*dz 0 0],...
        'String',labels{k},...
        'Value',v0(k),...
        'ForeGroundColor',fcolors{k},...
        'BackGroundColor',bcolor,...
        'Tooltipstring',tipstrs{k},...
        'Callback',['pv=' int2str(k) '; '...
        'for p = 1 : nv, '...
        '   if p == ' int2str(k) ', '...
        '      set (hc_view(p),''Value'',1), '...
        '   else, '...    
        '      set (hc_view(p),''Value'',0), '...
        '   end, '...   
        'end; '...
        cback{k}]);
end
 