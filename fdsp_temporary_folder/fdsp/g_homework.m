% G_HOMEWORK: Homework Builder GUI module 
%
% Usage: g_homework
%
% Version: 1.0
%
% Description: 
%              This graphical user interface module is an instructor's 
%              supplement to the text "Fundamentals of Digital Signal 
%              Processing using MATLAB" by R. J. Schilling and S. L 
%              Harris, Pacific Grove, CA: Brooks/Cole, 2005. It is 
%              designed to facilitate the creation of homework 
%              assignments using end-of-chapter problems.  Both the 
%              homework assignemnt and a PDF file solution can be 
%              generated with this "Homework Builder" GUI module.
%
% Create assignment pushbuttons:
%
%              Course number
%              Homework number
%              Due date
%              Section numbers
%
% Select problems pushbuttons:
%
%              Select problems
%              Delete problems
%              Insert problems
%              Generate ranom problems
% Menu bar:
%              Load option
%              Save option
%              Solutions option
%              Print option 
%              Help option 

% Programming notes:

% 1) Fix Solution path code to work with any drive later!

% Check MATLAB Version

if (f_oldmat)
   return
end

% Initialize

clc
clear all
course_number = {'EE301'};   % course number
homework_number = '1';       % homework assignment number
due_date = '10/1/2005';      % homework due date
np = 5;                      % number of problems in homework assignment
sec = {'1.5','2.10'};        % range of textbook sections for homework assignment
show_sec = 1;                % show section for each homework problem
white = [1 1 1];
pdf_file = '';
space = ' ';
quote = '''';

% Add solutions directory to path

[cd_found,solution_ps,solution_pdf] = f_checkcd;

% Check preferences

try
   course_number = getpref ('FDSP_preferences','course_number');
catch   
   course_number = {'EE301'};
end

% Create cell array of problems

[problems,secs,nums] = f_problems;
 
% Strings                          
                          
userinput = 'homework1';
cprobstr = '[cprobs,clist] = f_probrange (sec,problems); ';
rprobstr = '[prob,np] = f_randprob (np,sec,problems,1,nums); ';
plotstr = 'hv = f_plothome (han,course_number,homework_number,due_date,sec,problems,prob,show_sec,fsize); ';

% Create figure window with tiled axes
 
[hf_1,han,pos,colors,ht,fsize] = f_guihome;
delfcn = ['warning off, rmpath(solution_ps); rmpath(solution_pdf), warning on'];
set (hf_1,'DeleteFcn',delfcn)

% Load menu option

cback_load = [plotstr ...
              'set(ht_course,''String'',course_number); '...
              'set(ht_homework,''String'',homework_number); '...
              'set(ht_date,''String'',due_date); '...
              'set(ht_sec,''String'',[sec{1} '' to '' sec{2}]); '];
hm_load = f_loadmenu (userinput,'Load',cback_load);

% Save menu option

savestr = '''course_number'',''homework_number'',''due_date'',''sec'',''prob'',''show_sec''';
hm_save = f_savemenu (userinput,savestr,'Save');

% View solutions menu option

hm_3 = uimenu (hf_1,'Label','Solutions');

olddir = pwd;
fdspdir = [matlabroot filesep 'toolbox' filesep 'fdsp' filesep 'fdsp'];
cd (fdspdir)
 
try 

   reader_path = getpref ('FDSP_preferences','reader_path');
   reader_file = getpref ('FDSP_preferences','reader_file');
   hm31 = uimenu (hm_3,'Label','Select assigned homework problem');
   cback_solve = [
                  'problist = problems(prob,2); '...
                  '[s,v] = listdlg(''PromptString'','...
                  '''Select the homework assignment number.'','...
                  '''ListSize'',[150 300],'...
                  '''SelectionMode'',''single'','...
                  '''ListString'',problist);'...
                  'q = problems{prob(s),2}; '...
                  'pdf_file = which([''prob'' q(1) ''_'' q(3:end) ''.pdf'']); '...
                  'fprintf (''Initializing Adobe Acrobat Reader...\n''); '...       
                  'work_dir = pwd; '...
                  sprintf('cd(''%s''); ',reader_path)...
                  'set(hf_1,''Visible'',''off''); '...
                  'eval( [''system('' quote reader_file space pdf_file quote '')''] ); '...
                  'set(hf_1,''Visible'',''on''); '...
                  'clc, cd(work_dir);'
                  ];
   set (hm31,'Callback',cback_solve)         
   hm32 = uimenu (hm_3,'Label','Select entire chapter');
   cback_solvechap = [
                      'problist = problems(prob,2); '...
                      '[s,v] = listdlg(''PromptString'','...
                      '''Select chapter number.'','...
                      '''ListSize'',[150 300],'...
                      '''SelectionMode'',''single'','...
                      '''ListString'',nums(1:9)); '...
                      'pdf_file = sprintf(''problems_%d.pdf'',s); '...
                      'pdf_file = which(pdf_file); '...
                      'fprintf (''Initializing Adobe Acrobat Reader...\n''); '...       
                      'work_dir = pwd; '...
                      sprintf('cd(''%s''); ',reader_path)...
                      'set(hf_1,''Visible'',''off''); '...
                      'eval( [''system('' quote reader_file space pdf_file quote '')''] ); '...
                      'set(hf_1,''Visible'',''on''); '...
                      'clc, cd(work_dir);' 
                      ];
   set (hm32,'Callback',cback_solvechap)         

catch 

    cback = ['helpwin (''f_regreader'')'];
    hm_30 = uimenu (hm_3,'Label','Help','Callback',cback);
   
end
   
% Reader updates   
   
cback = ['if f_regreader, '...
         '  close, g_homework, '...
         'end'];
hm_32 = uimenu (hm_3,'Separator','on','Label','Register Acrobat Reader with FDSP','Callback',cback);

cback = ['web http://www.adobe.com/products/acrobat/readstep2.html;'];
hm_33 = uimenu (hm_3,'Label','Download Adobe Acrobat Reader','Callback',cback);
cd (olddir)    
    
% Print menu option

cback_print1 = [
                'for i = 1 : 2, '...
                '   set(han(i),''Visible'',''off''), '...
                '   set(ht(i),''Visible'',''off''), '...
                'end, '...
                'set(hc_course,''Visible'',''off''), '...
                'set(hc_homework,''Visible'',''off''), '...
                'set(hc_date,''Visible'',''off''), '...
                'set(hc_sec,''Visible'',''off''), '...
                'set(hc_showsec,''Visible'',''off''), '...
                'set(ht_course,''Visible'',''off''), '...
                'set(ht_homework,''Visible'',''off''), '...
                'set(ht_date,''Visible'',''off''), '...
                'set(ht_sec,''Visible'',''off''), '...
                'set(hc_select,''Visible'',''off''), '...
                'set(hc_delete,''Visible'',''off''), '...
                'set(hc_insert,''Visible'',''off''), '...
                'set(hc_random,''Visible'',''off''), '...
                'set(han(3),''Position'',[.07 0 .86 1]), '...
                'set(hv,''Visible'',''off''), '...
                'print -v; '...
                'set(han(3),''Position'',pos(3,:)), '...
                'set(hv,''Visible'',''on''), '...
                'for i = 1 : 2, '...
                '   set(han(i),''Visible'',''on''), '...
                '   set(ht(i),''Visible'',''on''), '...
                'end, '...
                'set(hc_course,''Visible'',''on''), '...
                'set(hc_homework,''Visible'',''on''), '...
                'set(hc_date,''Visible'',''on''), '...
                'set(hc_sec,''Visible'',''on''), '...
                'set(hc_showsec,''Visible'',''on''), '...
                'set(ht_course,''Visible'',''on''), '...
                'set(ht_homework,''Visible'',''on''), '...
                'set(ht_date,''Visible'',''on''), '...
                'set(ht_sec,''Visible'',''on''), '...
                'set(hc_select,''Visible'',''on''), '...
                'set(hc_delete,''Visible'',''on''), '...
                'set(hc_insert,''Visible'',''on''), '...
                'set(hc_random,''Visible'',''on''), '...
               ]; 
hm_6 = uimenu (hf_1,'Label','Print');
hm_61 = uimenu (hm_6,'Label','Print homework assignment','Callback',cback_print1);

warn = {'This option requires are postscript printer.',...
        'Do you have a post-script printer?'};

cback_print2 = [
                'button = questdlg (warn,''Postscript printer available?'',''Yes'',''No'',''No''); '...
                'if strcmp(button,''Yes''), '...
                    cback_print1 ...
                    'np = length(prob); '...
                    'for i = 1 : np, '...
                    '   q = problems{prob(i),2}; '...
                    '   ps_file = which([''prob'' q(1) ''_'' q(3:end) ''.ps'']); '...
                    '   eval( [''system('' quote ''copy '' ps_file space ''LPT1:'' quote '');''] ); '...
                    'end, '...
                    'clc; '...
                'end; '
               ];
hm_62 = uimenu (hm_6,'Label','Print homework solution (Postscript Printer)','Callback',cback_print2);

% Help and exit menu options

f_helpmenu ('f_tipshome','g_homework')
f_exitmenu 

% Add pushbuttons 

axes(han(1))
wbox = 0.15;
hbox = 0.036;
nrow = 4;
ncol = 2;
cback = '';
xtext = 0.65;
dh = (1 - (nrow-1)*hbox/pos(1,4))/nrow;
dv = 1.5*hbox;

% Course number

cback_course = ['def_course = course_number; '...
                'course_number = inputdlg (''Enter the course number'','...
                '''Specify the course number'',1,def_course); '...
                'set(ht_course,''String'',course_number); '...
                'setpref (''FDSP_preferences'',''course_number'',course_number); '...
                plotstr];
hc_course = f_pushbutton (pos(1,:),nrow,ncol,1,1,'Course number',colors(1,:),white,cback_course,...
                         'Specify the number or name of the course',fsize,wbox,hbox);
ht_course = text (xtext,1 + dv - (dh+hbox),course_number);
set (ht_course,'Color','r')

% Homework number
                     
cback_homework = ['[s,v] = listdlg(''PromptString'','...
                 '''Select the homework assignment number.'','...
                 '''ListSize'',[200 300],'...
                 '''SelectionMode'',''single'','...
                 '''ListString'',nums); '...
                 'homework_number = nums{s}; '...
                 'set(ht_homework,''String'',homework_number); '...
                  plotstr];
hc_homework = f_pushbutton (pos(1,:),nrow,ncol,2,1,'Homework number',colors(1,:),white,cback_homework,...
                         'Select the number of the homework assignment',fsize,wbox,hbox);
ht_homework = text (xtext,1 + dv - 2*(dh+hbox),homework_number);
set (ht_homework,'Color','r')

% Due date

cback_date = ['def_date = {due_date}; '...
              'due_date = char(inputdlg (''Enter the homework due date'', '...
              '''Specify the homework due date'',1,def_date)); '...
              'set(ht_date,''String'',due_date); '...
               plotstr];
hc_date = f_pushbutton (pos(1,:),nrow,ncol,3,1,'Due date',colors(1,:),white,cback_date,...
                         'Specify the due date of the homework assignment',fsize,wbox,hbox);
ht_date = text (xtext,1 + dv - 3*(dh+hbox),due_date);
set (ht_date,'Color','r')

% Section numbers

cback_sec = ['[s1,v] = listdlg(''PromptString'','...
             '[{''Select the FIRST section from which''};'...
             ' {''homework problems are to be assigned.''}],'...
             '''ListSize'',[300 300],'...
             '''SelectionMode'',''single'','...
             '''ListString'',secs); '...
             'sec{1} = secs{s1}; '...
             '[s2,v] = listdlg(''PromptString'','...
             '[{''Select the LAST section from which''};'...
             ' {''homework problems are to be assigned.''}],'...
             '''ListSize'',[300 300],'...
             '''SelectionMode'',''single'','...
             '''ListString'',secs(s1:end)); '...
             'sec{2} = secs{s1+s2-1}; '...
             'set(ht_sec,''String'',[char(sec{1}) '' to '' char(sec{2})]); '...
             plotstr];
 
hc_sec = f_pushbutton (pos(1,:),nrow,ncol,4,1,'Section numbers',colors(1,:),white,cback_sec,...
                         'Specify the section numbers for selecting problems',fsize,wbox,hbox);
ht_sec = text (xtext,1 + dv - 4*(dh+hbox),[sec{1} ' to ' sec{2}]);
set (ht_sec,'Color','r')
                      
% Select problems                      

ncol = 1;
wbox = 1.5*wbox;
cback_select = [cprobstr ...
                '[s,v] = listdlg(''PromptString'','...
                '[{''Select the homework problems. Hold down''};'...
                 '{''the Ctrl key to select multiple problems.''}],'...
                '''ListSize'',[300 300],'...
                '''ListString'',clist);'...
                'prob = cprobs(s); '...
                'np = length(s); '...
                plotstr]; 

hc_select = f_pushbutton (pos(2,:),nrow,ncol,1,1,'Select problems',colors(2,:),white,cback_select,...
                          'Select homework problems from a list',fsize,wbox,hbox);

% Delete problems                      
                      
cback_delete = ['problist = problems(prob,2); '...
                '[s,v] = listdlg(''PromptString'','...
                '[{''Select the homework problems to delete.  Hold ''};'...
                 '{''down the Ctrl key to select multiple problems.''}],'...
                '''ListSize'',[300 300],'...
                '''ListString'',problist);'...
                'prob(s) = []; '...
                'np = length(prob); '...
                plotstr]; 

hc_delete = f_pushbutton (pos(2,:),nrow,ncol,2,1,'Delete problems',colors(2,:),white,cback_delete,...
                           'Delect homework problems',fsize,wbox,hbox);

% Insert problems                      
                       
cback_insert = [cprobstr ...
                '[s,v] = listdlg(''PromptString'','...
                '[{''Select the homework problems to insert. Hold''};'...
                 '{''down the Ctrl key to select multiple problems.''}],'...
                '''ListSize'',[300 300],'...
                '''ListString'',clist);'...
                'prob = [prob cprobs(s)]; '...
                'prob = sort(prob); '...
                'np = length(prob); '...
                plotstr]; 

hc_insert = f_pushbutton (pos(2,:),nrow,ncol,3,1,'Insert problems',colors(2,:),white,cback_insert,...
                           'Insert homework problems',fsize,wbox,hbox);
                       
% Generate random problems

cback_random = [rprobstr  plotstr];
hc_random = f_pushbutton (pos(2,:),nrow,ncol,4,1,'Generate random problems',colors(2,:),white,...
                          cback_random,'Create a random homework assigment',fsize,wbox,hbox);

% Checkbox                       
           
axes (han(3))
p = pos(3,:);
hc_showsec = uicontrol(gcf,...
   'Style','checkbox',...
   'Units','normalized',...
   'FontName','FixedWdithFontName',...
   'FontSize',fsize,...
   'Position',[p(1)+0.6*p(3),p(2)+1.0*p(4),.12 .035],...
   'Value',show_sec, ...
   'String','Show sections',...
   'ForeGroundColor',colors(1,:),...
   'BackGroundColor',get(gcf,'Color'),...
   'Visible','on',...
   'Tooltip','Toggle the display of section information');
cback_showsec = ['show_sec = 1-show_sec; '...
                  plotstr];
set (hc_showsec,'Callback',cback_showsec)

% Display initial homework assignment

eval (cprobstr)
[prob,np] = f_randprob (np,sec,problems,0,nums);
eval (plotstr)
